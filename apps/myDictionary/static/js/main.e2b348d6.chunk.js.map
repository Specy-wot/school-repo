{"version":3,"sources":["components/newLanguage.js","components/newWord.js","components/Language.js","components/Word.js","components/Container.js","components/Section.js","index.js"],"names":["NewLanguage","props","addLanguage","e","currentLanguages","localStorage","getItem","JSON","parse","map","el","name","indexOf","state","value","alert","push","type","setItem","stringify","addElement","setState","handleChange","target","placeholder","language","this","className","onChange","onClick","Component","NewWord","addWord","currentLanguage","currentWords","word","Language","handleClick","changeLanguage","deleteLanguage","removeElement","isSelected","Word","window","getSelection","toString","translationShown","handleSelect","detail","preventDefault","deleteWord","splitWords","split","length","style","width","onMouseDown","Container","isWord","marginTop","content","Section","populateContent","buffer","sortText","isSorted","index","prompt","allLanguages","splice","removeItem","allWords","sort","a","b","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2b348d6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nclass NewLanguage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            placeholder: props.language,\r\n            value: \"\"\r\n        }\r\n    }\r\n    addLanguage = (e) => {\r\n        let currentLanguages = localStorage.getItem(\"languages\")\r\n        currentLanguages = currentLanguages === null ? [] : JSON.parse(currentLanguages)\r\n        let index = currentLanguages.map(el => el.name).indexOf(this.state.value)\r\n        if(index >= 0) return alert(\"Already exists!\")\r\n        currentLanguages.push({\r\n            name: this.state.value,\r\n            type: \"language\"\r\n        })\r\n        localStorage.setItem(\"languages\",JSON.stringify(currentLanguages))\r\n        this.props.addElement({\r\n            name: this.state.value,\r\n            type: \"language\"\r\n        })\r\n        this.setState({\r\n            value: \"\"\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value,\r\n        })\r\n    }\r\n    render() {\r\n        let language = this.state.value\r\n        return (\r\n            <div className=\"fillX min-y-2 wm-L2 margin-1 new\">\r\n                <input type=\"text\" className=\"newInput \" value={language} placeholder={this.state.placeholder} onChange={this.handleChange}/>\r\n                <button className=\"addLang\" onClick={this.addLanguage}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewLanguage","import React, { Component } from 'react'\r\n\r\nclass NewWord extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            placeholder: props.word,\r\n            value: \"\"\r\n        }\r\n    }\r\n    addWord = (e) => {\r\n        if(this.props.currentLanguage === \"none\") return alert(\"Select a language first\")\r\n        let currentWords = localStorage.getItem(\"words-\"+this.props.currentLanguage)\r\n        currentWords = currentWords === null ? [] : JSON.parse(currentWords)\r\n        let index = currentWords.map(el => el.name).indexOf(this.state.word)\r\n        if(index >= 0) return alert(\"Already exists!\")\r\n        currentWords.push({\r\n            name: this.state.value,\r\n            type: \"word\"\r\n        })\r\n        localStorage.setItem(\"words-\"+this.props.currentLanguage,JSON.stringify(currentWords))\r\n        this.props.addElement({\r\n            name: this.state.value,\r\n            type: \"word\"\r\n        })\r\n        this.setState({\r\n            value: \"\",\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        let placeholder = this.state.placeholder\r\n        return (\r\n            <div className=\"fillX min-y-2 wm-L2 margin-1 new\">\r\n                <input type=\"text\" className=\"newInput\" placeholder={placeholder} onChange={this.handleChange} value={this.state.value}/>\r\n                <button className=\"addLang\" onClick={this.addWord}>Add</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWord","import React, { Component } from 'react'\r\nclass Language extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    handleClick = e => {\r\n        let language = this.props.name\r\n        this.props.changeLanguage(language)\r\n    }\r\n    deleteLanguage = e => {\r\n        this.props.removeElement(this.props.name)\r\n    }\r\n    render() {\r\n        let currentLanguage = this.props.currentLanguage\r\n        let isSelected = this.props.name === currentLanguage\r\n        return (\r\n            <div className=\"lanWordRow\">\r\n                <div className={isSelected ? \"language green\" : \"language\"} onClick={this.handleClick}>\r\n                    {this.props.name}\r\n                </div>\r\n                <button className=\"red x\" onClick={this.deleteLanguage}>✖</button>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Language","import React, { Component } from 'react'\r\n\r\nclass Word extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            translationShown: false\r\n        }\r\n    }\r\n    handleClick = e => {\r\n        if(window.getSelection().toString() !== \"\") return\r\n        this.setState({\r\n            translationShown: !this.state.translationShown\r\n        })\r\n    }\r\n    handleSelect = e => {\r\n        if (e.detail > 1) {\r\n            e.preventDefault();\r\n          }\r\n    }\r\n    deleteWord = () => {\r\n        this.props.removeElement(this.props.name)\r\n    }\r\n    render() {\r\n        let splitWords = this.props.name.split(\":\")\r\n        if(splitWords.length === 1) splitWords.push(\"none\")\r\n        return (\r\n            <div className=\"lanWordRow\">\r\n                <div style={{width:\"100%\"}}>\r\n                    <div \r\n                        className={this.state.translationShown ? \"wordTranslation\" : \"word\"}\r\n                        onClick={this.handleClick} onMouseDown={this.handleSelect}\r\n                    >\r\n                        {this.state.translationShown ? splitWords[1] : splitWords[0]}\r\n                    </div>\r\n                </div>\r\n                <button className=\"red x\" onClick={this.deleteWord}>✖</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Word","import React, { Component } from 'react'\r\nimport Language from './Language'\r\nimport Word from './Word'\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        let isWord = this.props.type === \"word\"\r\n        return (\r\n            <div className=\"Container dm-L4 scroll-bar\" style={isWord ? {marginTop: \"0\"} : {}}>\r\n                {this.props.content.map(el => {\r\n                    let changeLanguage = this.props.changeLanguage\r\n                    if(el.type === \"language\"){\r\n                        return <Language \r\n                            name={el.name} \r\n                            removeElement={this.props.removeElement} \r\n                            changeLanguage={changeLanguage}\r\n                            currentLanguage={this.props.currentLanguage}\r\n                        />\r\n                    }else{\r\n                        return <Word \r\n                            name={el.name}\r\n                            removeElement={this.props.removeElement} \r\n                            changeLanguage={changeLanguage}\r\n                            currentLanguage={this.props.currentLanguage}\r\n                        />\r\n                    }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container","import React, { Component } from 'react'\r\nimport NewLanguage from \"./newLanguage\"\r\nimport NewWord from \"./newWord\"\r\nimport Container from \"./Container\"\r\nclass Section extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            content: this.populateContent(),\r\n            isSorted: false\r\n        }\r\n    }\r\n\r\n    populateContent = () => {\r\n        let buffer = this.props.type === \"language\" ? localStorage.getItem(\"languages\") : localStorage.getItem(\"words-\"+this.props.currentLanguage)\r\n        buffer = buffer === null ? [] : JSON.parse(buffer)\r\n        return buffer\r\n    }\r\n\r\n    addElement = (e) => {\r\n        this.state.content.push(e)\r\n        this.setState({\r\n            content: this.state.content\r\n        })\r\n    }\r\n\r\n    sortText = () => {\r\n        this.setState({\r\n            isSorted: !this.state.isSorted\r\n        })\r\n    }\r\n\r\n    removeElement = (e) => {\r\n        let index = this.state.content.map(el => el.name).indexOf(e)\r\n        if(index < 0) return\r\n        if(this.props.type === \"language\"){\r\n            let confirm = prompt(\"Are you sure you want to DELETE '\"+e+\"'?\"+\r\n            \" To confirm write the language name\")\r\n            if(confirm !== e) return\r\n            let allLanguages = JSON.parse(localStorage.getItem(\"languages\"))\r\n            allLanguages.splice(index,1)\r\n            localStorage.removeItem(\"words-\"+e)\r\n            localStorage.setItem(\"languages\",JSON.stringify(allLanguages))\r\n            this.props.changeLanguage(\"none\")\r\n        }else{\r\n            let allWords = JSON.parse(localStorage.getItem(\"words-\"+this.props.currentLanguage))\r\n            allWords.splice(index,1)\r\n            localStorage.setItem(\"words-\"+this.props.currentLanguage,JSON.stringify(allWords))\r\n        }\r\n        this.state.content.splice(index,1)\r\n        this.setState({\r\n            content: this.state.content\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let content = this.populateContent()\r\n        if(this.state.isSorted) content = content.sort((a,b) =>{\r\n            if(a.name > b.name) return 1\r\n            return -1\r\n        })  \r\n        this.state.content = content\r\n        if (this.props.type === \"language\") {\r\n            let changeLanguage = this.props.changeLanguage\r\n            return (\r\n                <div className=\"column centerY\" style={{ width: \"100%\" }}>\r\n                    <Container type=\"language\" \r\n                        content={content} \r\n                        removeElement={this.removeElement} \r\n                        changeLanguage={changeLanguage}\r\n                        currentLanguage={this.props.currentLanguage}\r\n                    />\r\n                    <NewLanguage language=\"Language name\" addElement={this.addElement} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"column centerY\" style={{ width: \"100%\" }}>\r\n                    <div className=\"az\">\r\n                        <div className=\"margin-05\">A-Z</div>\r\n                        <input type=\"checkbox\" onClick={this.sortText}/>\r\n                    </div>\r\n                    <Container type=\"word\" \r\n                        content={content} \r\n                        removeElement={this.removeElement} \r\n                        currentLanguage={this.props.currentLanguage}\r\n                    />\r\n                    <NewWord word=\"Word : Translation\"\r\n                        addElement={this.addElement}\r\n                        currentLanguage={this.props.currentLanguage}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Section","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport './specy.css';\nimport './index.css';\nimport Section from \"./components/Section\"\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      language: \"none\"\n    }\n  }\n  changeLanguage = (language) => {\n    this.setState({\n      language: language\n    })\n  }\n  render(){\n    return(\n      <div className=\"main\" >\n        <div className=\"title margin-2\">\n          My Dictionary\n        </div>\n        <div className=\"div-60 dm-L2 column centerY\">\n          <div className=\"big-text margin-top-2\">Select language</div>\n          <Section type=\"language\" changeLanguage={this.changeLanguage} currentLanguage={this.state.language}/>\n          <Section type=\"word\" currentLanguage={this.state.language}/>\n        </div>\n      </div>\n\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render( < App /> , document.getElementById(\"root\"));"],"sourceRoot":""}